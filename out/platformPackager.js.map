{
  "version": 3,
  "file": "platformPackager.js",
  "sourceRoot": "",
  "sources": [
    "../src/platformPackager.ts"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "import { InfoRetriever, ProjectMetadataProvider } from \"./repositoryInfo\"\nimport { AppMetadata, DevMetadata, Platform, PlatformSpecificBuildOptions, getProductName } from \"./metadata\"\nimport EventEmitter = NodeJS.EventEmitter\nimport { Promise as BluebirdPromise } from \"bluebird\"\nimport * as path from \"path\"\nimport packager = require(\"electron-packager-tf\")\nimport globby = require(\"globby\")\nimport { copy, unlink } from \"fs-extra-p\"\nimport { statOrNull, use, spawn, debug7zArgs, debug } from \"./util\"\nimport { Packager } from \"./packager\"\nimport deepAssign = require(\"deep-assign\")\nimport { listPackage, statFile } from \"asar\"\nimport ElectronPackagerOptions = ElectronPackager.ElectronPackagerOptions\nimport { path7za } from \"7zip-bin\"\n\n//noinspection JSUnusedLocalSymbols\nconst __awaiter = require(\"./awaiter\")\n\nconst pack = BluebirdPromise.promisify(packager)\n\nclass CompressionDescriptor {\n  constructor(public flag: string, public env: string, public minLevel: string, public maxLevel: string = \"-9\") {\n  }\n}\n\nconst extToCompressionDescriptor: { [key: string]: CompressionDescriptor; } = {\n  \"tar.xz\": new CompressionDescriptor(\"--xz\", \"XZ_OPT\", \"-0\", \"-9e\"),\n  \"tar.lz\": new CompressionDescriptor(\"--lzip\", \"LZOP\", \"-0\"),\n  \"tar.gz\": new CompressionDescriptor(\"--gz\", \"GZIP\", \"-1\"),\n  \"tar.bz2\": new CompressionDescriptor(\"--bzip2\", \"BZIP2\", \"-1\"),\n}\n\nexport interface PackagerOptions {\n  arch?: string | null\n\n  dist?: boolean | null\n  githubToken?: string | null\n\n  sign?: string | null\n\n  platform?: Array<Platform> | null\n\n  // deprecated\n  appDir?: string | null\n\n  projectDir?: string | null\n\n  cscLink?: string | null\n  csaLink?: string | null\n  cscKeyPassword?: string | null\n\n  cscInstallerLink?: string | null\n  cscInstallerKeyPassword?: string | null\n\n  platformPackagerFactory?: ((packager: Packager, platform: Platform, cleanupTasks: Array<() => Promise<any>>) => PlatformPackager<any>) | n\n\n  /**\n   * The same as [development package.json](https://github.com/electron-userland/electron-builder/wiki/Options#development-packagejson).\n   *\n   * Development `package.json` will be still read, but options specified in this object will override.\n   */\n  readonly devMetadata?: DevMetadata\n}\n\nexport interface BuildInfo extends ProjectMetadataProvider {\n  options: PackagerOptions\n\n  devMetadata: DevMetadata\n\n  projectDir: string\n  appDir: string\n\n  electronVersion: string\n\n  repositoryInfo: InfoRetriever | n\n  eventEmitter: EventEmitter\n}\n\nexport abstract class PlatformPackager<DC extends PlatformSpecificBuildOptions> implements ProjectMetadataProvider {\n  protected readonly options: PackagerOptions\n\n  protected readonly projectDir: string\n  protected readonly buildResourcesDir: string\n\n  readonly metadata: AppMetadata\n  readonly devMetadata: DevMetadata\n\n  readonly customBuildOptions: DC\n\n  readonly appName: string\n\n  readonly targets: Array<string>\n\n  public abstract get platform(): Platform\n\n  constructor(protected info: BuildInfo) {\n    this.options = info.options\n    this.projectDir = info.projectDir\n    this.metadata = info.metadata\n    this.devMetadata = info.devMetadata\n\n    this.buildResourcesDir = path.resolve(this.projectDir, this.relativeBuildResourcesDirname)\n    this.customBuildOptions = (<any>info.devMetadata.build)[this.platform.buildConfigurationKey] || Object.create(null)\n    this.appName = getProductName(this.metadata, this.devMetadata)\n\n    const targets = normalizeTargets(this.customBuildOptions.target)\n    if (targets != null) {\n      const supportedTargets = this.supportedTargets.concat(\"default\", \"zip\", \"7z\", \"tar.xz\", \"tar.lz\", \"tar.gz\", \"tar.bz2\")\n      for (let target of targets) {\n        if (!supportedTargets.includes(target)) {\n          throw new Error(\"Unknown target: \" + target)\n        }\n      }\n    }\n    this.targets = targets == null ? [\"default\"] : targets\n  }\n\n  protected get relativeBuildResourcesDirname() {\n    return use(this.devMetadata.directories, it => it!.buildResources) || \"build\"\n  }\n\n  protected abstract get supportedTargets(): Array<string>\n\n  protected computeAppOutDir(outDir: string, arch: string): string {\n    return path.join(outDir, `${this.appName}-${this.platform.nodeName}-${arch}`)\n  }\n\n  protected dispatchArtifactCreated(file: string, artifactName?: string) {\n    this.info.eventEmitter.emit(\"artifactCreated\", {\n      file: file,\n      artifactName: artifactName,\n      platform: this.platform,\n    })\n  }\n\n  abstract pack(outDir: string, arch: string, postAsyncTasks: Array<Promise<any>>): Promise<any>\n\n  protected async doPack(options: ElectronPackagerOptions, outDir: string, appOutDir: string, arch: string, customBuildOptions: DC) {\n    await this.packApp(options, appOutDir)\n    await this.copyExtraResources(appOutDir, arch, customBuildOptions)\n  }\n\n  protected computePackOptions(outDir: string, arch: string): ElectronPackagerOptions {\n    const version = this.metadata.version\n    let buildVersion = version\n    const buildNumber = this.computeBuildNumber()\n    if (buildNumber != null) {\n      buildVersion += \".\" + buildNumber\n    }\n\n    const options = deepAssign({\n      dir: this.info.appDir,\n      out: outDir,\n      name: this.appName,\n      productName: this.appName,\n      platform: this.platform.nodeName,\n      arch: arch,\n      version: this.info.electronVersion,\n      icon: path.join(this.buildResourcesDir, \"icon\"),\n      asar: true,\n      overwrite: true,\n      \"app-version\": version,\n      \"app-copyright\": `Copyright © ${new Date().getFullYear()} ${this.metadata.author.name || this.appName}`,\n      \"build-version\": buildVersion,\n      tmpdir: false,\n      \"version-string\": {\n        CompanyName: this.metadata.author.name,\n        FileDescription: smarten(this.metadata.description),\n        ProductName: this.appName,\n        InternalName: this.appName,\n      }\n    }, this.devMetadata.build)\n\n    delete options.osx\n    delete options.win\n    delete options.linux\n    // this option only for windows-installer\n    delete options.iconUrl\n    return options\n  }\n\n  protected async packApp(options: ElectronPackagerOptions, appOutDir: string): Promise<any> {\n    await pack(options)\n\n    const afterPack = this.devMetadata.build.afterPack\n    if (afterPack != null) {\n      await afterPack({\n        appOutDir: appOutDir,\n        options: options,\n      })\n    }\n\n    await this.sanityCheckPackage(appOutDir, <boolean>options.asar)\n  }\n\n  private getExtraResources(arch: string, customBuildOptions: DC): Promise<Array<string>> {\n    const buildMetadata: any = this.devMetadata.build\n    let extraResources: Array<string> | n = buildMetadata == null ? null : buildMetadata.extraResources\n\n    const platformSpecificExtraResources = customBuildOptions.extraResources\n    if (platformSpecificExtraResources != null) {\n      extraResources = extraResources == null ? platformSpecificExtraResources : extraResources.concat(platformSpecificExtraResources)\n    }\n\n    if (extraResources == null) {\n      return BluebirdPromise.resolve([])\n    }\n\n    const expandedPatterns = extraResources.map(it => it\n      .replace(/\\$\\{arch}/g, arch)\n      .replace(/\\$\\{os}/g, this.platform.buildConfigurationKey))\n    return globby(expandedPatterns, {cwd: this.projectDir})\n  }\n\n  protected async copyExtraResources(appOutDir: string, arch: string, customBuildOptions: DC): Promise<Array<string>> {\n    let resourcesDir = appOutDir\n    if (this.platform === Platform.OSX) {\n      resourcesDir = this.getOSXResourcesDir(appOutDir)\n    }\n    return await BluebirdPromise.map(await this.getExtraResources(arch, customBuildOptions), it => copy(path.join(this.projectDir, it), path.join(resourcesDir, it)))\n  }\n\n  protected async computePackageUrl(): Promise<string | null> {\n    const url = this.metadata.homepage || this.devMetadata.homepage\n    if (url != null) {\n      return url\n    }\n\n    if (this.info.repositoryInfo != null) {\n      const info = await this.info.repositoryInfo.getInfo(this)\n      if (info != null) {\n        return `https://github.com/${info.user}/${info.project}`\n      }\n    }\n    return null\n  }\n\n  protected computeBuildNumber(): string | null {\n    return this.devMetadata.build[\"build-version\"] || process.env.TRAVIS_BUILD_NUMBER || process.env.APPVEYOR_BUILD_NUMBER || process.env.CIRCLE_BUILD_NUM || process.env.BUILD_NUMBER\n  }\n\n  private getResourcesDir(appOutDir: string): string {\n    return this.platform === Platform.OSX ? this.getOSXResourcesDir(appOutDir) : path.join(appOutDir, \"resources\")\n  }\n\n  private getOSXResourcesDir(appOutDir: string): string {\n    return path.join(appOutDir, this.appName + \".app\", \"Contents\", \"Resources\")\n  }\n\n  private async statFileInPackage(resourcesDir: string, packageFile: string, isAsar: boolean): Promise<any> {\n    const relativeFile = path.relative(this.info.appDir, path.resolve(this.info.appDir, packageFile))\n    if (isAsar) {\n      try {\n        return statFile(path.join(resourcesDir, \"app.asar\"), relativeFile) != null\n      }\n      catch (e) {\n        // asar throws error on access to undefined object (info.link)\n        return false\n      }\n    }\n    else {\n      const outStat = await statOrNull(path.join(resourcesDir, \"app\", relativeFile))\n      return outStat != null && outStat.isFile()\n    }\n  }\n\n  private static async sanityCheckAsar(asarFile: string): Promise<any> {\n    const outStat = await statOrNull(asarFile)\n\n    if (outStat == null) {\n      throw new Error(`Package file ${asarFile} was not created.`)\n    }\n\n    try {\n      listPackage(asarFile)\n    }\n    catch (e) {\n      throw new Error(`Package file ${asarFile} is corrupted.`)\n    }\n  }\n\n  private async sanityCheckPackage(appOutDir: string, isAsar: boolean): Promise<any> {\n    const outStat = await statOrNull(appOutDir)\n\n    if (outStat == null) {\n      throw new Error(`Output directory ${appOutDir} does not exists. Seems like a wrong configuration.`)\n    }\n    else if (!outStat.isDirectory()) {\n      throw new Error(`Output directory ${appOutDir} is not a directory. Seems like a wrong configuration.`)\n    }\n\n    const resourcesDir = this.getResourcesDir(appOutDir)\n    if (isAsar) {\n      await PlatformPackager.sanityCheckAsar(path.join(resourcesDir, \"app.asar\"))\n    }\n\n    const mainFile = this.metadata.main || \"index.js\"\n    const mainFileExists = await this.statFileInPackage(resourcesDir, mainFile, isAsar)\n    if (!mainFileExists) {\n      throw new Error(`Application entry file ${mainFile} could not be found in package. Seems like a wrong configuration.`)\n    }\n  }\n\n  protected async archiveApp(format: string, appOutDir: string, outFile: string): Promise<any> {\n    const compression = this.devMetadata.build.compression\n    const storeOnly = compression === \"store\"\n\n    const fileToArchive = this.platform === Platform.OSX ? path.join(appOutDir, `${this.appName}.app`) : appOutDir\n    const baseDir = path.dirname(fileToArchive)\n    const basename = path.basename(fileToArchive);\n    if (format.startsWith(\"tar.\")) {\n      // we don't use 7z here - develar: I spent a lot of time making pipe working - but it works on OS X and often hangs on Linux (even if use pipe-io lib)\n      // and in any case it is better to use system tools (in the light of docker - it is not problem for user because we provide complete docker image).\n      const info = extToCompressionDescriptor[format]\n      let tarEnv = process.env\n      if (compression != null && compression !== \"normal\") {\n        tarEnv = Object.assign({}, process.env)\n        tarEnv[info.env] = storeOnly ? info.minLevel : info.maxLevel\n      }\n\n      await spawn(process.platform === \"darwin\" ? \"/usr/local/opt/gnu-tar/libexec/gnubin/tar\" : \"tar\", [info.flag, \"-cf\", outFile, \"-C\", fileToArchive + '/..', basename], {\n        cwd: baseDir,\n        stdio: [\"ignore\", debug.enabled ? \"inherit\" : \"ignore\", \"inherit\"],\n        env: tarEnv\n      })\n      return\n    }\n\n    const args = debug7zArgs(\"a\")\n    if (compression === \"maximum\") {\n      if (format === \"7z\" || format.endsWith(\".7z\")) {\n        args.push(\"-mx=9\", \"-mfb=64\", \"-md=32m\", \"-ms=on\")\n      }\n      else if (format === \"zip\") {\n        // http://superuser.com/a/742034\n        //noinspection SpellCheckingInspection\n        args.push(\"-mfb=258\", \"-mpass=15\")\n      }\n      else {\n        args.push(\"-mx=9\")\n      }\n    }\n    else if (storeOnly) {\n      if (format !== \"zip\") {\n        args.push(\"-mx=1\")\n      }\n    }\n\n    // remove file before - 7z doesn't overwrite file, but update\n    try {\n      await unlink(outFile)\n    }\n    catch (e) {\n      // ignore\n    }\n\n    if (format === \"zip\" || storeOnly) {\n      args.push(\"-mm=\" + (storeOnly ? \"Copy\" : \"Deflate\"))\n    }\n\n    args.push(outFile, fileToArchive)\n\n    await spawn(path7za, args, {\n      cwd: baseDir,\n      stdio: [\"ignore\", debug.enabled ? \"inherit\" : \"ignore\", \"inherit\"],\n    })\n  }\n}\n\nexport function archSuffix(arch: string) {\n  return arch === \"x64\" ? \"\" : `-${arch}`\n}\n\nexport interface ArtifactCreated {\n  readonly file: string\n  readonly artifactName?: string\n\n  readonly platform: Platform\n}\n\nexport function normalizeTargets(targets: Array<string> | string | null | undefined): Array<string> | null {\n  if (targets == null) {\n    return null\n  }\n  else {\n    return (Array.isArray(targets) ? targets : [targets]).map(it => it.toLowerCase().trim())\n  }\n}\n\n// fpm bug - rpm build --description is not escaped, well... decided to replace quite to smart quote\n// http://leancrew.com/all-this/2010/11/smart-quotes-in-javascript/\nexport function smarten(s: string): string {\n  // opening singles\n  s = s.replace(/(^|[-\\u2014\\s(\\[\"])'/g, \"$1\\u2018\")\n  // closing singles & apostrophes\n  s = s.replace(/'/g, \"\\u2019\")\n  // opening doubles\n  s = s.replace(/(^|[-\\u2014/\\[(\\u2018\\s])\"/g, \"$1\\u201c\")\n  // closing doubles\n  s = s.replace(/\"/g, \"\\u201d\")\n  return s\n}\n"
  ]
}
