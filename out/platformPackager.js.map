{
  "version": 3,
  "file": "platformPackager.js",
  "sourceRoot": "",
  "sources": [
    "../src/platformPackager.ts"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "import { InfoRetriever, ProjectMetadataProvider } from \"./repositoryInfo\"\nimport { AppMetadata, DevMetadata, Platform, PlatformSpecificBuildOptions, getProductName, Arch } from \"./metadata\"\nimport EventEmitter = NodeJS.EventEmitter\nimport { Promise as BluebirdPromise } from \"bluebird\"\nimport * as path from \"path\"\nimport { pack, ElectronPackagerOptions } from \"electron-packager-tf\"\nimport { globby } from \"./globby\"\nimport { readdir, copy, unlink, lstat, remove } from \"fs-extra-p\"\nimport { statOrNull, use, spawn, debug7zArgs, debug, warn, log } from \"./util\"\nimport { Packager } from \"./packager\"\nimport { listPackage, statFile, AsarFileMetadata, createPackageFromFiles, AsarOptions } from \"asar\"\nimport { path7za } from \"7zip-bin\"\nimport deepAssign = require(\"deep-assign\")\nimport { Glob } from \"glob\"\n\n//noinspection JSUnusedLocalSymbols\nconst __awaiter = require(\"./awaiter\")\n\nclass CompressionDescriptor {\n  constructor(public flag: string, public env: string, public minLevel: string, public maxLevel: string = \"-9\") {\n  }\n}\n\nconst extToCompressionDescriptor: { [key: string]: CompressionDescriptor; } = {\n  \"tar.xz\": new CompressionDescriptor(\"--xz\", \"XZ_OPT\", \"-0\", \"-9e\"),\n  \"tar.lz\": new CompressionDescriptor(\"--lzip\", \"LZOP\", \"-0\"),\n  \"tar.gz\": new CompressionDescriptor(\"--gz\", \"GZIP\", \"-1\"),\n  \"tar.bz2\": new CompressionDescriptor(\"--bzip2\", \"BZIP2\", \"-1\"),\n}\n\nexport const commonTargets = [\"dir\", \"zip\", \"7z\", \"tar.xz\", \"tar.lz\", \"tar.gz\", \"tar.bz2\"]\n\nexport const DIR_TARGET = \"dir\"\n\nexport interface PackagerOptions {\n  targets?: Map<Platform, Map<Arch, string[]>>\n\n  projectDir?: string | null\n\n  cscLink?: string | null\n  cscKeyPassword?: string | null\n\n  cscInstallerLink?: string | null\n  cscInstallerKeyPassword?: string | null\n\n  platformPackagerFactory?: ((packager: Packager, platform: Platform, cleanupTasks: Array<() => Promise<any>>) => PlatformPackager<any>) | null\n\n  /**\n   * The same as [development package.json](https://github.com/electron-userland/electron-builder/wiki/Options#development-packagejson).\n   *\n   * Development `package.json` will be still read, but options specified in this object will override.\n   */\n  readonly devMetadata?: DevMetadata\n}\n\nexport interface BuildInfo extends ProjectMetadataProvider {\n  options: PackagerOptions\n\n  devMetadata: DevMetadata\n\n  projectDir: string\n  appDir: string\n\n  electronVersion: string\n\n  repositoryInfo: InfoRetriever | n\n  eventEmitter: EventEmitter\n\n  isTwoPackageJsonProjectLayoutUsed: boolean\n}\n\nexport abstract class PlatformPackager<DC extends PlatformSpecificBuildOptions> implements ProjectMetadataProvider {\n  protected readonly options: PackagerOptions\n\n  protected readonly projectDir: string\n  protected readonly buildResourcesDir: string\n\n  readonly metadata: AppMetadata\n  readonly devMetadata: DevMetadata\n\n  readonly customBuildOptions: DC\n\n  readonly appName: string\n\n  readonly resourceList: Promise<Array<string>>\n\n  public abstract get platform(): Platform\n\n  constructor(protected info: BuildInfo) {\n    this.options = info.options\n    this.projectDir = info.projectDir\n    this.metadata = info.metadata\n    this.devMetadata = info.devMetadata\n\n    this.buildResourcesDir = path.resolve(this.projectDir, this.relativeBuildResourcesDirname)\n    this.customBuildOptions = (<any>info.devMetadata.build)[this.platform.buildConfigurationKey] || Object.create(null)\n    this.appName = getProductName(this.metadata, this.devMetadata)\n\n    this.resourceList = readdir(this.buildResourcesDir)\n      .catch(e => {\n        if (e.code !== \"ENOENT\") {\n          throw e\n        }\n        return []\n      })\n  }\n\n  protected getCscPassword(): string {\n    const password = this.options.cscKeyPassword\n    if (password == null) {\n      log(\"CSC_KEY_PASSWORD is not defined, empty password will be used\")\n      return \"\"\n    }\n    else {\n      return password.trim()\n    }\n  }\n\n  public computeEffectiveTargets(rawList: Array<string>): Array<string> {\n    let targets = normalizeTargets(rawList.length === 0 ? this.customBuildOptions.target : rawList)\n    if (targets != null) {\n      const supportedTargets = this.supportedTargets.concat(commonTargets)\n      for (let target of targets) {\n        if (target !== \"default\" && !supportedTargets.includes(target)) {\n          throw new Error(`Unknown target: ${target}`)\n        }\n      }\n    }\n    return targets == null ? [\"default\"] : targets\n  }\n\n  protected hasOnlyDirTarget(): boolean {\n    for (let targets of this.options.targets!.get(this.platform)!.values()) {\n      for (let t of targets) {\n        if (t !== \"dir\") {\n          return false\n        }\n      }\n    }\n\n    const targets = normalizeTargets(this.customBuildOptions.target)\n    return targets != null && targets.length === 1 && targets[0] === \"dir\"\n  }\n\n  protected get relativeBuildResourcesDirname() {\n    return use(this.devMetadata.directories, it => it!.buildResources) || \"build\"\n  }\n\n  protected abstract get supportedTargets(): Array<string>\n\n  protected computeAppOutDir(outDir: string, arch: Arch): string {\n    return path.join(outDir, `${this.platform.buildConfigurationKey}${arch === Arch.x64 ? \"\" : `-${Arch[arch]}`}`)\n  }\n\n  protected dispatchArtifactCreated(file: string, artifactName?: string) {\n    this.info.eventEmitter.emit(\"artifactCreated\", {\n      file: file,\n      artifactName: artifactName,\n      platform: this.platform,\n    })\n  }\n\n  abstract pack(outDir: string, arch: Arch, targets: Array<string>, postAsyncTasks: Array<Promise<any>>): Promise<any>\n\n  protected async doPack(options: ElectronPackagerOptions, outDir: string, appOutDir: string, arch: Arch, customBuildOptions: DC) {\n    const asar = options.asar\n    options.asar = false\n    await pack(options)\n    options.asar = asar\n\n    const asarOptions = this.computeAsarOptions(customBuildOptions)\n    if (asarOptions != null) {\n      await this.createAsarArchive(appOutDir, asarOptions)\n    }\n\n    await this.copyExtraFiles(appOutDir, arch, customBuildOptions)\n\n    const afterPack = this.devMetadata.build.afterPack\n    if (afterPack != null) {\n      await afterPack({\n        appOutDir: appOutDir,\n        options: options,\n      })\n    }\n\n    await this.sanityCheckPackage(appOutDir, asarOptions != null)\n  }\n\n  protected computePackOptions(outDir: string, appOutDir: string, arch: Arch): ElectronPackagerOptions {\n    const version = this.metadata.version\n    let buildVersion = version\n    const buildNumber = this.computeBuildNumber()\n    if (buildNumber != null) {\n      buildVersion += \".\" + buildNumber\n    }\n\n    //noinspection JSUnusedGlobalSymbols\n    const options: any = deepAssign({\n      dir: this.info.appDir,\n      out: outDir,\n      name: this.appName,\n      productName: this.appName,\n      platform: this.platform.nodeName,\n      arch: Arch[arch],\n      version: this.info.electronVersion,\n      icon: path.join(this.buildResourcesDir, \"icon\"),\n      overwrite: true,\n      \"app-version\": version,\n      \"app-copyright\": `Copyright © ${new Date().getFullYear()} ${this.metadata.author.name || this.appName}`,\n      \"build-version\": buildVersion,\n      tmpdir: false,\n      generateFinalBasename: () => path.basename(appOutDir),\n      \"version-string\": {\n        CompanyName: this.metadata.author.name,\n        FileDescription: smarten(this.metadata.description),\n        ProductName: this.appName,\n        InternalName: this.appName,\n      }\n    }, this.devMetadata.build)\n\n    if (!this.info.isTwoPackageJsonProjectLayoutUsed && typeof options.ignore !== \"function\") {\n      const defaultIgnores = [\"/node_modules/electron-builder($|/)\", \"^/\" + path.relative(this.projectDir, this.buildResourcesDir) + \"($|/)\"]\n      if (options.ignore != null && !Array.isArray(options.ignore)) {\n        options.ignore = [options.ignore]\n      }\n      options.ignore = options.ignore == null ? defaultIgnores : options.ignore.concat(defaultIgnores)\n    }\n\n    delete options.osx\n    delete options.win\n    delete options.linux\n    // this option only for windows-installer\n    delete options.iconUrl\n    return options\n  }\n\n  private getExtraResources(isResources: boolean, arch: Arch, customBuildOptions: DC): Promise<Set<string>> {\n    let patterns: Array<string> | n = (<any>this.devMetadata.build)[isResources ? \"extraResources\" : \"extraFiles\"]\n    const platformSpecificPatterns = isResources ? customBuildOptions.extraResources : customBuildOptions.extraFiles\n    if (platformSpecificPatterns != null) {\n      patterns = patterns == null ? platformSpecificPatterns : patterns.concat(platformSpecificPatterns)\n    }\n    return patterns == null ? BluebirdPromise.resolve(new Set()) : globby(this.expandPatterns(patterns, arch), {cwd: this.projectDir});\n  }\n\n  private computeAsarOptions(customBuildOptions: DC): AsarOptions | null {\n    let result = this.devMetadata.build.asar\n    let platformSpecific = customBuildOptions.asar\n    if (platformSpecific != null) {\n      result = platformSpecific\n    }\n\n    if (result === false) {\n      return null\n    }\n\n    const buildMetadata = <ElectronPackagerOptions>this.devMetadata.build\n    if (buildMetadata[\"asar-unpack\"] != null) {\n      warn(\"asar-unpack is deprecated, please set as asar.unpack\")\n    }\n    if (buildMetadata[\"asar-unpack-dir\"] != null) {\n      warn(\"asar-unpack-dir is deprecated, please set as asar.unpackDir\")\n    }\n\n    if (result == null || result === true) {\n      return {\n        unpack: buildMetadata[\"asar-unpack\"],\n        unpackDir: buildMetadata[\"asar-unpack-dir\"]\n      }\n    }\n    else {\n      return result\n    }\n  }\n\n  private async createAsarArchive(appOutDir: string, options: AsarOptions): Promise<any> {\n    const src = path.join(this.getResourcesDir(appOutDir), \"app\")\n\n    let glob: Glob | null = null\n    const files = (await new BluebirdPromise<Array<string>>((resolve, reject) => {\n      glob = new Glob(\"**/*\", {\n        cwd: src,\n        // dot: true as in the asar by default\n        dot: true,\n        ignore: \"**/.DS_Store\",\n      }, (error, matches) => {\n        if (error == null) {\n          resolve(matches)\n        }\n        else {\n          reject(error)\n        }\n      })\n    })).map(it => path.join(src, it))\n\n    const stats = await BluebirdPromise.map(files, it => {\n      // const stat = glob!.statCache[it]\n      // return stat == null ? lstat(it) : <any>stat\n      // todo check is it safe to reuse glob stat\n      return lstat(it)\n    })\n\n    const metadata: { [key: string]: AsarFileMetadata; } = {}\n    for (let i = 0, n = files.length; i < n; i++) {\n      const stat = stats[i]\n      metadata[files[i]] = {\n        type: stat.isFile() ? \"file\" : (stat.isDirectory() ? \"directory\" : \"link\"),\n        stat: stat,\n      }\n    }\n\n    await BluebirdPromise.promisify(createPackageFromFiles)(src, path.join(this.getResourcesDir(appOutDir), \"app.asar\"), files, metadata, options)\n    await remove(src)\n  }\n\n  private expandPatterns(list: Array<string>, arch: Arch): Array<string> {\n    return list.map(it => it\n      .replace(/\\$\\{arch}/g, Arch[arch])\n      .replace(/\\$\\{os}/g, this.platform.buildConfigurationKey))\n  }\n\n  protected async copyExtraFiles(appOutDir: string, arch: Arch, customBuildOptions: DC): Promise<any> {\n    await this.doCopyExtraFiles(true, appOutDir, arch, customBuildOptions)\n    await this.doCopyExtraFiles(false, appOutDir, arch, customBuildOptions)\n  }\n\n  private async doCopyExtraFiles(isResources: boolean, appOutDir: string, arch: Arch, customBuildOptions: DC): Promise<Array<string>> {\n    const base = isResources ? this.getResourcesDir(appOutDir) : this.platform === Platform.OSX ? path.join(appOutDir, `${this.appName}.app`, \"Contents\") : appOutDir\n    return await BluebirdPromise.map(await this.getExtraResources(isResources, arch, customBuildOptions), it => copy(path.join(this.projectDir, it), path.join(base, it)))\n  }\n\n  protected async computePackageUrl(): Promise<string | null> {\n    const url = this.metadata.homepage || this.devMetadata.homepage\n    if (url != null) {\n      return url\n    }\n\n    if (this.info.repositoryInfo != null) {\n      const info = await this.info.repositoryInfo.getInfo(this)\n      if (info != null) {\n        return `https://github.com/${info.user}/${info.project}`\n      }\n    }\n    return null\n  }\n\n  protected computeBuildNumber(): string | null {\n    return this.devMetadata.build[\"build-version\"] || process.env.TRAVIS_BUILD_NUMBER || process.env.APPVEYOR_BUILD_NUMBER || process.env.CIRCLE_BUILD_NUM || process.env.BUILD_NUMBER\n  }\n\n  private getResourcesDir(appOutDir: string): string {\n    return this.platform === Platform.OSX ? this.getOSXResourcesDir(appOutDir) : path.join(appOutDir, \"resources\")\n  }\n\n  private getOSXResourcesDir(appOutDir: string): string {\n    return path.join(appOutDir, `${this.appName}.app`, \"Contents\", \"Resources\")\n  }\n\n  private async statFileInPackage(resourcesDir: string, packageFile: string, isAsar: boolean): Promise<any> {\n    const relativeFile = path.relative(this.info.appDir, path.resolve(this.info.appDir, packageFile))\n    if (isAsar) {\n      try {\n        return statFile(path.join(resourcesDir, \"app.asar\"), relativeFile) != null\n      }\n      catch (e) {\n        const asarFile = path.join(resourcesDir, \"app.asar\")\n        const fileStat = await statOrNull(asarFile)\n        if (fileStat == null) {\n          throw new Error(`File \"${asarFile}\" does not exist. Seems like a wrong configuration.`)\n        }\n\n        try {\n          listPackage(asarFile)\n        }\n        catch (e) {\n          throw new Error(`File \"${asarFile}\" is corrupted: ${e}`)\n        }\n\n        // asar throws error on access to undefined object (info.link)\n        return false\n      }\n    }\n    else {\n      const outStat = await statOrNull(path.join(resourcesDir, \"app\", relativeFile))\n      return outStat != null && outStat.isFile()\n    }\n  }\n\n  private async sanityCheckPackage(appOutDir: string, isAsar: boolean): Promise<any> {\n    const outStat = await statOrNull(appOutDir)\n\n    if (outStat == null) {\n      throw new Error(`Output directory \"${appOutDir}\" does not exist. Seems like a wrong configuration.`)\n    }\n    else if (!outStat.isDirectory()) {\n      throw new Error(`Output directory \"${appOutDir}\" is not a directory. Seems like a wrong configuration.`)\n    }\n\n    const resourcesDir = this.getResourcesDir(appOutDir)\n    const mainFile = this.metadata.main || \"index.js\"\n    const mainFileExists = await this.statFileInPackage(resourcesDir, mainFile, isAsar)\n    if (!mainFileExists) {\n      throw new Error(`Application entry file ${mainFile} could not be found in package. Seems like a wrong configuration.`)\n    }\n  }\n\n  protected async archiveApp(format: string, appOutDir: string, outFile: string): Promise<any> {\n    const compression = this.devMetadata.build.compression\n    const storeOnly = compression === \"store\"\n\n    const dirToArchive = this.platform === Platform.OSX ? path.join(appOutDir, `${this.appName}.app`) : appOutDir\n    if (format.startsWith(\"tar.\")) {\n      // we don't use 7z here - develar: I spent a lot of time making pipe working - but it works on OS X and often hangs on Linux (even if use pipe-io lib)\n      // and in any case it is better to use system tools (in the light of docker - it is not problem for user because we provide complete docker image).\n      const info = extToCompressionDescriptor[format]\n      let tarEnv = process.env\n      if (compression != null && compression !== \"normal\") {\n        tarEnv = Object.assign({}, process.env)\n        tarEnv[info.env] = storeOnly ? info.minLevel : info.maxLevel\n      }\n\n      await spawn(process.platform === \"darwin\" || process.platform === \"freebsd\" ? \"gtar\" : \"tar\", [info.flag, \"--transform\", `s,^\\.,${path.basename(outFile, \".\" + format)},`, \"-cf\", outFile, \".\"], {\n        cwd: dirToArchive,\n        stdio: [\"ignore\", debug.enabled ? \"inherit\" : \"ignore\", \"inherit\"],\n        env: tarEnv\n      })\n      return\n    }\n\n    const args = debug7zArgs(\"a\")\n    if (compression === \"maximum\") {\n      if (format === \"7z\" || format.endsWith(\".7z\")) {\n        args.push(\"-mx=9\", \"-mfb=64\", \"-md=32m\", \"-ms=on\")\n      }\n      else if (format === \"zip\") {\n        // http://superuser.com/a/742034\n        //noinspection SpellCheckingInspection\n        args.push(\"-mfb=258\", \"-mpass=15\")\n      }\n      else {\n        args.push(\"-mx=9\")\n      }\n    }\n    else if (storeOnly) {\n      if (format !== \"zip\") {\n        args.push(\"-mx=1\")\n      }\n    }\n\n    // remove file before - 7z doesn't overwrite file, but update\n    try {\n      await unlink(outFile)\n    }\n    catch (e) {\n      // ignore\n    }\n\n    if (format === \"zip\" || storeOnly) {\n      args.push(\"-mm=\" + (storeOnly ? \"Copy\" : \"Deflate\"))\n    }\n\n    args.push(outFile, dirToArchive)\n\n    await spawn(path7za, args, {\n      cwd: path.dirname(dirToArchive),\n      stdio: [\"ignore\", debug.enabled ? \"inherit\" : \"ignore\", \"inherit\"],\n    })\n  }\n}\n\nexport function getArchSuffix(arch: Arch): string {\n  return arch === Arch.x64 ? \"\" : `-${Arch[arch]}`\n}\n\nexport interface ArtifactCreated {\n  readonly file: string\n  readonly artifactName?: string\n\n  readonly platform: Platform\n}\n\nexport function normalizeTargets(targets: Array<string> | string | null | undefined): Array<string> | null {\n  if (targets == null) {\n    return null\n  }\n  else {\n    return (Array.isArray(targets) ? targets : [targets]).map(it => it.toLowerCase().trim())\n  }\n}\n\n// fpm bug - rpm build --description is not escaped, well... decided to replace quite to smart quote\n// http://leancrew.com/all-this/2010/11/smart-quotes-in-javascript/\nexport function smarten(s: string): string {\n  // opening singles\n  s = s.replace(/(^|[-\\u2014\\s(\\[\"])'/g, \"$1\\u2018\")\n  // closing singles & apostrophes\n  s = s.replace(/'/g, \"\\u2019\")\n  // opening doubles\n  s = s.replace(/(^|[-\\u2014/\\[(\\u2018\\s])\"/g, \"$1\\u201c\")\n  // closing doubles\n  s = s.replace(/\"/g, \"\\u201d\")\n  return s\n}\n"
  ]
}
